/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.snake;

import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.time.Clock;
import javax.swing.Timer;

/**
 *
 * @author alu11563090
 */
public class Board extends javax.swing.JPanel {

    class MyKeyAdapter extends KeyAdapter {

        @Override
        public void keyPressed(KeyEvent e) {
            switch (e.getKeyCode()) {
                case KeyEvent.VK_UP:
                case KeyEvent.VK_DOWN:
                case KeyEvent.VK_RIGHT:
                case KeyEvent.VK_LEFT:
                    snake.move();
                    break;
            }
        }
    }
    
        
        public static final int NUM_ROWS = 30;
        public static final int NUM_COLS = 30;

        private Snake snake;
        private Food food;
        private SpecialFood specialFood;
        private Timer timer;

        /**
         * Creates new form Board
         */
        public Board() {
            snake = new Snake();
            generateRandomFood();
            generateRandomSpecialFood();
        }

        public int getSquareWidth() {
            return getWidth() / NUM_ROWS;
        }

        public void generateRandomFood() {
            int randomRow = (int) (Math.random() * NUM_ROWS);
            int randomCol = (int) (Math.random() * NUM_COLS);
            food = new Food(randomRow, randomCol);
        }

        public void generateRandomSpecialFood() {
            int randomRow = (int) (Math.random() * NUM_ROWS);
            int randomCol = (int) (Math.random() * NUM_COLS);
            specialFood = new SpecialFood(randomRow, randomCol);
        }

        public int getSquareHeight() {
            return getHeight() / NUM_COLS;
        }

        public void initGame() {
            timer = new Timer(ConfigData.getInstance().getDeltaTime(), new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent ae) {
                    tick();
                }
            });
            timer.start();
        }
        
        private void tick() {
            
        }

        @Override
        public void paintComponent(Graphics g) {
            if (snake != null) {
                snake.paint(g, getSquareWidth(), getSquareHeight());
            }
            food.paint(g, getSquareWidth(), getSquareHeight());
            //specialFood.paint(g, getSquareWidth(), getSquareHeight());
        }

        /**
         * This method is called from within the constructor to initialize the
         * form. WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.GridLayout());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
